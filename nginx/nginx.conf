worker_processes auto;

events {
  worker_connections 1024;
}

http {
  upstream product_service {
    server product_service:5001;
  }

  upstream order_service {
    server order_service:5002;
  }

  upstream notification_service {
    server notification_service:5003;
  }

  upstream user_service {
    server user_service:5004;
  }

  server {
    listen 80;

    location /product-service/ {
      proxy_pass http://product_service/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_intercept_errors on;
    }

    location /order-service/ {
      proxy_pass http://order_service/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_intercept_errors on;
    }

    location /notification-service/ {
      proxy_pass http://notification_service/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_intercept_errors on;
    }

    location /user-service/ {
      proxy_pass http://user_service/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_intercept_errors on;
    }

    location /socket.io/ {
	  proxy_pass http://notification_service/socket.io/;

	  # WebSocket support
	  proxy_http_version 1.1;
	  proxy_set_header Upgrade $http_upgrade;
	  proxy_set_header Connection "upgrade";

	  proxy_set_header Host $host;
	  proxy_set_header X-Real-IP $remote_addr;
	  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	  proxy_set_header X-Forwarded-Proto $scheme;

	  proxy_intercept_errors on;
	}

    location /img/ {
      alias /usr/share/nginx/html/img/;
    }

    location / {
      return 404;
    }

    error_page 404 /custom_404.html;
    location = /custom_404.html {
      alias /usr/share/nginx/html/custom_404.html;
      internal;
    }
  }
}